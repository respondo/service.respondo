// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Respondo.Core.Parties.Persistence;

#nullable disable

namespace Respondo.Core.Parties.Persistence.Migrations
{
    [DbContext(typeof(PartiesDbContext))]
    [Migration("20241015130022_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Occasion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Occasions");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("OccasionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OccasionId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Member", b =>
                {
                    b.HasOne("Respondo.Core.Parties.Entities.Party", "Party")
                        .WithMany("Members")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Occasion", b =>
                {
                    b.HasOne("Respondo.Core.Parties.Entities.Profile", "Profile")
                        .WithMany("Occasions")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Party", b =>
                {
                    b.HasOne("Respondo.Core.Parties.Entities.Occasion", "Occasion")
                        .WithMany("Parties")
                        .HasForeignKey("OccasionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occasion");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Occasion", b =>
                {
                    b.Navigation("Parties");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Party", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Respondo.Core.Parties.Entities.Profile", b =>
                {
                    b.Navigation("Occasions");
                });
#pragma warning restore 612, 618
        }
    }
}
